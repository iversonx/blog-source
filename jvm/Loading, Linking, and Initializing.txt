JVM 动态加载，链接，和初始化类和接口。

加载是查找具有特定名称的类或接口类型的二进制表示，并从该二进制表示创建类或接口的过程。

链接是获取类或接口并将其组合到JVM的运行时状态中，以便类和接口可以执行的过程。

初始化是执行类或接口初始化方法<clinit>


JVM的启动
JVM通过使用引导类加载器(bootstrap class loader)创建一个初始类来完成的，这个初始类由具体JVM实现决定。
JVM会链接初始类，初始化它并调用这个类的main方法。

在JVM的实现中，初始类可以作为命令行参数提供。或者提供初始类，这个类设置类加载器来加载应用




创建和加载
要创建类或接口(N表示类，C表示接口)，Java虚拟机就要在方法区域中为C构造与虚拟机实现相匹配的内部表示。

C的创建由另一个类或接口触发，通过其运行时常量池引用C。C可能由某些Java SE平台类库中的D调用方法触发？

如果C不是数组里，则通过使用类加载器加载C的二进制表示来创建C。(数组类没有外部二进制表示；它们由JVM创建。)

有两种类加载器：JVM提供给的引导类加载器和用户自定义的类加载器。自定义的类加载器是抽象类ClassLoader的子类的实例。
自定义加载器是为了便于扩展JVM的功能，以支持动态加载并创建类。自定义类加载可用于创建自定义源的类，例如可以通过网络下载类，即时生成或从加密文件中提取类。

类加载器(L)可以通过直接定义C或委托给另一个类加载器来创建C。如果L直接创建C，那么说L定义C或L是C的定义加载器。

在JVM运行时，类或接口的确定是由二进制名称和它的定义类加载器确定的。类或接口只属于一个运行时包结构，包结构由包名及类的定义类加载器来决定。




